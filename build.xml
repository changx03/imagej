<?xml version="1.0" encoding="UTF-8" ?>
 
<project name="JavaFX ImageJ Example" default="default" basedir="."
  xmlns:fx="javafx:com.sun.javafx.tools.ant">
 
  <property environment="env"/>
  <property name="JAVA_HOME" value="${env.JAVA_HOME}"/>
  <property name="build.src.dir" value="src"/>
  <property name="build.classes.dir" value="classes"/>
  <property name="build.dist.dir" value="dist"/>
  <property name="build.lib.dir" value="lib"/>
  <property name="build.app.dir" value="fx-app"/>

  <path id="master-classpath">
    <fileset dir="${basedir}/target/dependency/">
      <include name="*.jar"/>
    </fileset>
    
    <pathelement path="${build.dir}"/>
  </path>
 
  <target name="default" depends="clean,compile">
 
    <taskdef resource="com/sun/javafx/tools/ant/antlib.xml"
      uri="javafx:com.sun.javafx.tools.ant"
      classpath=".:${JAVA_HOME}/lib/ant-javafx.jar"/>
 
      <fx:application id="ImageJ"
        name="ImageJ"
        mainClass="net.imagej.Main"
        fallbackClass="net.imagej.Main"/>
 
      <fx:resources id="appRes">
<!-- FIXME: depends on mvn dependency:copy-dependencies, or getting deps from local .m2 repo -->
        <fx:fileset dir="${basedir}/target/dependency/" includes="*.jar"/>

        <fx:fileset dir="${build.dist.dir}" includes="imagej.jar"/>
      </fx:resources>
 
      <fx:jar destfile="${build.dist.dir}/imagej.jar">
        <fx:application refid="ImageJ"/>
        <fx:resources refid="appRes"/>

        <fileset dir="${build.classes.dir}"/>
      </fx:jar>
 
      <fx:deploy width="600" height="400"
        outdir="${build.app.dir}" nativebundles="all"
        outfile="imagej">
 
        <fx:application refId="ImageJ"/>
 
        <fx:resources refId="appRes"/>

        <!-- NB: Make self-contained bundles *without* a JRE. -->
        <fx:platform basedir=""/>
 
        <fx:info title="ImageJ Application"
          vendor="LOCI"/>
      </fx:deploy>
 
  </target>
 
  <target name="clean">
    <delete dir="${build.classes.dir}"/>
    <delete dir="${build.dist.dir}"/>
    <delete dir="${build.app.dir}"/>
  </target>
 
  <!-- FIXME: depends on mvn dependency:copy-dependencies, or getting deps from local .m2 repo -->
  <target name="compile" depends="clean">
 
    <mkdir dir="${build.classes.dir}"/>
    <mkdir dir="${build.dist.dir}"/>
    <mkdir dir="${build.app.dir}"/>

    <javac includeantruntime="false"
      srcdir="${build.src.dir}"
      destdir="${build.classes.dir}"
      fork="yes"
      executable="${JAVA_HOME}/bin/javac"
      source="1.8"
      debug="on">
      <classpath refid="master-classpath"/>
    </javac>
  </target>
 
</project>
